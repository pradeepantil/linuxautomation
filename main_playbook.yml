---
- name: Automate Linux Server Management with Ansible
  hosts: all
  become: yes

  vars:
    new_user: ansible_user
    new_user_password: your_secure_password
    common_packages_ubuntu: ['vim', 'git', 'curl', 'wget', 'net-tools', 'htop', 'unzip']
    common_packages_rhel: ['vim', 'git', 'curl', 'wget', 'net-tools', 'unzip']
    desired_timezone: America/New_York
    node_exporter_version: 1.8.1
    node_exporter_arch_map:
      x86_64: amd64
      aarch64: arm64
    node_exporter_install_dir: /usr/local/bin
    node_exporter_service_file: /etc/systemd/system/node_exporter.service

  tasks:
    - name: Set architecture for node_exporter
      set_fact:
        node_exporter_arch: "{{ node_exporter_arch_map[ansible_facts['architecture']] }}"

    - name: Set node_exporter tarball and URL
      set_fact:
        node_exporter_tarball: "node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz"
        node_exporter_url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz"
        node_exporter_extract_path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}"

    - name: Update apt cache and upgrade on Ubuntu
      apt:
        update_cache: yes
        upgrade: yes
      when: ansible_facts['distribution'] == 'Ubuntu'

    - name: Upgrade all packages on RHEL
      yum:
        name: '*'
        state: latest
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Create new user
      user:
        name: "{{ new_user }}"
        password: "{{ new_user_password | password_hash('sha512') }}"
        state: present
        shell: /bin/bash
        create_home: yes

    - name: Add new user to sudo or wheel group
      user:
        name: "{{ new_user }}"
        groups: "{{ 'sudo' if ansible_facts['distribution'] == 'Ubuntu' else 'wheel' }}"
        append: yes

    - name: Ensure sudoers file allows wheel group (RHEL)
      lineinfile:
        path: /etc/sudoers
        regexp: '^%wheel\s+ALL=\(ALL\)\s+ALL'
        line: '%wheel ALL=(ALL) ALL'
        state: present
        validate: '/usr/sbin/visudo -cf %s'
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Install NTP tools
      package:
        name: "{{ ['ntpdate', 'ntp'] if ansible_facts['distribution'] == 'Ubuntu' else ['chrony'] }}"
        state: present

    - name: Enable and start NTP services
      service:
        name: "{{ 'ntp' if ansible_facts['distribution'] == 'Ubuntu' else 'chronyd' }}"
        state: started
        enabled: yes

    - name: Install common packages
      package:
        name: "{{ common_packages_ubuntu if ansible_facts['distribution'] == 'Ubuntu' else common_packages_rhel }}"
        state: present

    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Set system timezone (without collection)
      shell: timedatectl set-timezone "{{ desired_timezone }}"
      args:
        warn: false

    - name: Create node_exporter group
      group:
        name: node_exporter
        system: yes

    - name: Create node_exporter user
      user:
        name: node_exporter
        system: yes
        shell: /sbin/nologin
        group: node_exporter
        create_home: no

    - name: Download Node Exporter
      get_url:
        url: "{{ node_exporter_url }}"
        dest: "/tmp/{{ node_exporter_tarball }}"
        mode: '0644'

    - name: Extract Node Exporter
      unarchive:
        src: "/tmp/{{ node_exporter_tarball }}"
        dest: /tmp
        remote_src: yes

    - name: Copy node_exporter binary
      copy:
        src: "{{ node_exporter_extract_path }}/node_exporter"
        dest: "{{ node_exporter_install_dir }}/node_exporter"
        owner: node_exporter
        group: node_exporter
        mode: '0755'
        remote_src: yes

    - name: Create node_exporter systemd service
      copy:
        content: |
          [Unit]
          Description=Node Exporter
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=node_exporter
          Group=node_exporter
          Type=simple
          ExecStart=/usr/local/bin/node_exporter

          [Install]
          WantedBy=default.target
        dest: "{{ node_exporter_service_file }}"
        owner: root
        group: root
        mode: '0644'
      notify: Restart node_exporter

    - name: Enable and start node_exporter service
      systemd:
        name: node_exporter
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Open port 9100 in firewalld (RHEL)
      shell: |
        firewall-cmd --permanent --add-port=9100/tcp
        firewall-cmd --reload
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Open port 9100 in UFW (Ubuntu)
      shell: |
        ufw allow 9100/tcp
        ufw reload
      when: ansible_facts['distribution'] == 'Ubuntu'

  handlers:
    - name: Restart node_exporter
      systemd:
        name: node_exporter
        state: restarted
        daemon_reload: yes
