---
- name: Install Prometheus Node Exporter
  hosts: all
  become: yes

  vars:
    node_exporter_version: 1.8.1
    node_exporter_arch_map:
      x86_64: amd64
      aarch64: arm64
    node_exporter_install_dir: /usr/local/bin
    node_exporter_service_file: /etc/systemd/system/node_exporter.service

  tasks:

    - name: Set architecture-specific variables
      set_fact:
        node_exporter_arch: "{{ node_exporter_arch_map[ansible_facts['architecture']] }}"
        node_exporter_tarball: "node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch_map[ansible_facts['architecture']] }}.tar.gz"
        node_exporter_url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch_map[ansible_facts['architecture']] }}.tar.gz"
        node_exporter_extract_path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch_map[ansible_facts['architecture']] }}"

    - name: Create node_exporter group
      group:
        name: node_exporter
        system: yes
        state: present

    - name: Create node_exporter user
      user:
        name: node_exporter
        system: yes
        shell: /sbin/nologin
        group: node_exporter
        create_home: no
        state: present

    - name: Download Node Exporter tarball
      get_url:
        url: "{{ node_exporter_url }}"
        dest: "/tmp/{{ node_exporter_tarball }}"
        mode: '0644'

    - name: Extract Node Exporter tarball
      unarchive:
        src: "/tmp/{{ node_exporter_tarball }}"
        dest: /tmp
        remote_src: yes

    - name: Copy node_exporter binary to install directory
      copy:
        src: "{{ node_exporter_extract_path }}/node_exporter"
        dest: "{{ node_exporter_install_dir }}/node_exporter"
        owner: node_exporter
        group: node_exporter
        mode: '0755'
        remote_src: yes

    - name: Create systemd service file for Node Exporter
      template:
        src: node_exporter.service.j2
        dest: "{{ node_exporter_service_file }}"
        owner: root
        group: root
        mode: '0644'
      notify: Restart node_exporter

    - name: Reload systemd and start node_exporter service
      systemd:
        name: node_exporter
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Open port 9100 in firewalld (RHEL)
      ansible.posix.firewalld:
        port: 9100/tcp
        state: enabled
        permanent: yes
        immediate: yes
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Allow port 9100 in UFW (Ubuntu)
      community.general.ufw:
        rule: allow
        port: '9100'
        proto: tcp
      when: ansible_facts['distribution'] == 'Ubuntu'

  handlers:
    - name: Restart node_exporter
      systemd:
        name: node_exporter
        state: restarted
        enabled: yes
        daemon_reload: yes  

